{"mappings":"CCwCA,AAlBA,SAAS,EAAW,CAAO,CAAE,CAAI,EAC/B,IAAM,EAAK,SAAS,aAAa,CAAC,MAElC,EAAQ,WAAW,CAAC,GAEf,IAAA,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,E,G,CAAL,IAAA,IAAK,EAAA,EAAkB,OAAO,OAAO,CAAC,EAAA,CAAA,OAAA,QAAA,CAAA,GAAjC,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAA,CAAA,EAAwC,CAAxC,IAAM,EAAN,EAAA,KAAA,CACG,EAAK,SAAS,aAAa,CAAC,KAElC,CAAA,EAAG,WAAW,CAAG,CAAQ,CAAC,EAAE,CAC5B,EAAW,EAAI,OAAO,MAAM,CAAC,EAAS,CAAC,EAAE,EACzC,EAAG,WAAW,CAAC,EACjB,C,C,M,E,CANK,EAAA,CAAA,EAAA,EAAA,C,Q,C,G,CAAA,GAAA,AAAA,MAAA,EAAA,MAAA,EAAA,EAAA,MAAA,E,Q,CAAA,GAAA,EAAA,MAAA,C,C,CAQA,EAAG,aAAa,IACnB,EAAG,UAAU,CAAC,WAAW,CAAC,EAE9B,EAlBa,SAAS,aAAa,CAAC,SAlBvB,CACX,MAAO,CACL,KAAM,CAAC,EACP,QAAS,CAAC,CACZ,EAEA,MAAO,CACL,IAAK,CACH,OAAQ,CAAC,EACT,WAAY,CAAC,CACf,EACA,OAAQ,CACN,OAAQ,CAAC,EACT,UAAW,CAAC,CACd,CACF,CACF","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar food = {\n    Drink: {\n        Wine: {},\n        Schnaps: {}\n    },\n    Fruit: {\n        Red: {\n            Cherry: {},\n            Strawberry: {}\n        },\n        Yellow: {\n            Banana: {},\n            Pineapple: {}\n        }\n    }\n};\nvar tree = document.querySelector(\"#tree\");\nfunction createTree(element, data) {\n    var ul = document.createElement(\"ul\");\n    element.appendChild(ul);\n    var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n    try {\n        for(var _iterator = Object.entries(data)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n            var dataItem = _step.value;\n            var li = document.createElement(\"li\");\n            li.textContent = dataItem[0];\n            createTree(li, Object.values(dataItem)[1]);\n            ul.appendChild(li);\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally{\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n            }\n        } finally{\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n    if (!ul.hasChildNodes()) ul.parentNode.removeChild(ul);\n}\ncreateTree(tree, food);\n\n//# sourceMappingURL=index.dbad1726.js.map\n","'use strict';\n\nconst food = {\n  Drink: {\n    Wine: {},\n    Schnaps: {},\n  },\n\n  Fruit: {\n    Red: {\n      Cherry: {},\n      Strawberry: {},\n    },\n    Yellow: {\n      Banana: {},\n      Pineapple: {},\n    },\n  },\n};\n\nconst tree = document.querySelector('#tree');\n\nfunction createTree(element, data) {\n  const ul = document.createElement('ul');\n\n  element.appendChild(ul);\n\n  for (const dataItem of Object.entries(data)) {\n    const li = document.createElement('li');\n\n    li.textContent = dataItem[0];\n    createTree(li, Object.values(dataItem)[1]);\n    ul.appendChild(li);\n  }\n\n  if (!ul.hasChildNodes()) {\n    ul.parentNode.removeChild(ul);\n  }\n}\n\ncreateTree(tree, food);\n"],"names":["createTree","element","data","ul","document","createElement","appendChild","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Object","entries","Symbol","iterator","next","done","dataItem","value","li","textContent","values","err","return","hasChildNodes","parentNode","removeChild","querySelector","Drink","Wine","Schnaps","Fruit","Red","Cherry","Strawberry","Yellow","Banana","Pineapple"],"version":3,"file":"index.dbad1726.js.map"}